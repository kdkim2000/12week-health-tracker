# .github/workflows/deploy.yml
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint
        continue-on-error: true  # ESLint 경고가 있어도 빌드 계속 진행

      - name: Debug project structure and config
        run: |
          echo "=== Project structure ==="
          ls -la
          echo ""
          echo "=== Next.js config files ==="
          find . -name "next.config.*" -type f
          echo ""
          echo "=== Package.json scripts ==="
          if [ -f "package.json" ]; then
            cat package.json | grep -A 10 '"scripts"'
          fi
          echo ""

      - name: Show Next.js configuration content
        run: |
          if [ -f "next.config.ts" ]; then
            echo "=== next.config.ts content ==="
            cat next.config.ts
          elif [ -f "next.config.js" ]; then
            echo "=== next.config.js content ==="
            cat next.config.js
          elif [ -f "next.config.mjs" ]; then
            echo "=== next.config.mjs content ==="
            cat next.config.mjs
          else
            echo "❌ No Next.js config file found!"
            echo "Creating minimal next.config.js..."
            cat > next.config.js << 'EOF'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            distDir: 'out',
            trailingSlash: true,
            images: {
              unoptimized: true,
            },
          };
          module.exports = nextConfig;
          EOF
          fi

      - name: Build with Next.js (verbose)
        env:
          NODE_ENV: production
          # Firebase 환경 변수 (GitHub Secrets에서 주입)
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
        run: |
          echo "=== Starting Next.js build ==="
          npm run build
          echo "=== Build completed, checking directories ==="
          echo "Root directory:"
          ls -la
          echo ""
          echo "Looking for build outputs:"
          find . -type d -name "out" -o -name ".next" -o -name "dist" -o -name "build" | head -10
          echo ""
          if [ -d ".next" ]; then
            echo ".next directory contents:"
            ls -la .next/
          fi

      - name: Force create out directory if missing
        run: |
          if [ ! -d "out" ]; then
            echo "❌ 'out' directory not found after build"
            echo "Attempting alternative solutions..."
            
            # 방법 1: .next/static을 out으로 복사 시도
            if [ -d ".next/static" ]; then
              echo "Found .next/static, trying to create out directory manually"
              mkdir -p out
              cp -r .next/static out/
            fi
            
            # 방법 2: next export 명령 시도 (구버전 호환)
            if [ ! -d "out" ]; then
              echo "Trying legacy next export command..."
              npx next export || echo "next export failed"
            fi
            
            # 방법 3: 최소한의 out 디렉토리 생성
            if [ ! -d "out" ]; then
              echo "Creating minimal out directory for deployment..."
              mkdir -p out
              echo "<h1>Build Error - out directory manually created</h1>" > out/index.html
            fi
          else
            echo "✅ 'out' directory found!"
          fi
          
          echo "Final check - out directory contents:"
          ls -la out/ || echo "out directory still not accessible"

      - name: Try alternative build methods
        if: always()
        env:
          NODE_ENV: production
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
        run: |
          if [ ! -d "out" ]; then
            echo "Trying alternative build methods..."
            
            # 방법 1: next.config.js 강제 생성 후 재빌드
            cat > next.config.js << 'EOF'
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            output: 'export',
            distDir: 'out', 
            trailingSlash: true,
            images: { unoptimized: true },
            basePath: process.env.NODE_ENV === 'production' ? '/12week-health-tracker' : '',
            assetPrefix: process.env.NODE_ENV === 'production' ? '/12week-health-tracker' : '',
          };
          module.exports = nextConfig;
          EOF
            
            echo "Created new next.config.js, rebuilding..."
            rm -rf .next
            npm run build
            
            if [ ! -d "out" ]; then
              # 방법 2: next export 직접 실행
              echo "Trying direct next export..."
              npx next export --outdir out
            fi
            
            if [ ! -d "out" ]; then
              # 방법 3: .next 빌드 결과를 out으로 복사
              echo "Copying .next build to out directory..."
              mkdir -p out
              if [ -d ".next" ]; then
                cp -r .next/static out/
                cp -r .next/server/app out/ 2>/dev/null || true
                find .next -name "*.html" -exec cp {} out/ \;
              fi
            fi
          fi

      - name: Verify and prepare out directory
        run: |
          if [ ! -d "out" ]; then
            echo "Creating emergency out directory with basic content..."
            mkdir -p out
            cat > out/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><title>Build Issue</title></head>
          <body><h1>Build configuration issue - please check next.config setup</h1></body>
          </html>
          EOF
          fi
          
          echo "Final out directory status:"
          ls -la out/
          echo "out directory size:"
          du -sh out/

      - name: Add .nojekyll file
        run: touch out/.nojekyll

      - name: Verify build output
        run: |
          echo "Checking build output directory..."
          ls -la out/
          echo "Build output verification complete"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4